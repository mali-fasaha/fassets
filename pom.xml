<?xml version="1.0" encoding="UTF-8"?>
<!--

    fassets - Project for light-weight tracking of fixed assets
    Copyright Â© 2018 Edwin Njeru (mailnjeru@gmail.com)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.fassets</groupId>
    <artifactId>fassets</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>



    <name>fassets</name>
    <inceptionYear>2018</inceptionYear>
    <description>Project for light-weight tracking of fixed assets</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <properties>
        <!--General-->
        <build.profile.id>dev</build.profile.id>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyy-MMM-dd HH:mm z</maven.build.timestamp.format>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <it.skip>false</it.skip>
        <skip.unit.tests>false</skip.unit.tests>
        <surefireArgLine>-Dapp.env=LOCAL -Dapp.domain=localhost -Dapp.port=9901</surefireArgLine>
        <failsafeArgLine>-Dapp.env=LOCAL -Dapp.domain=localhost -Dapp.port=9901</failsafeArgLine>
        <env.TRAVIS_JOB_ID></env.TRAVIS_JOB_ID>
        <project.reporting.outputDirectory>"documentation"</project.reporting.outputDirectory>
        <hibernate.validation.version>6.0.7.Final</hibernate.validation.version>
        <guava.version>23.6-jre</guava.version>
        <eclipse.collections.version>9.1.0</eclipse.collections.version>
        <moneta.version>1.1</moneta.version>
        <jadira.userType.version>6.0.1.GA</jadira.userType.version>
        <spring.data.envers.version>2.0.2.RELEASE</spring.data.envers.version>
        <jquery.version>3.1.1</jquery.version>
        <bootstrap.version>3.3.7</bootstrap.version>
        <!--<poiji.version>1.8</poiji.version>-->
        <poiji.version>1.15</poiji.version>
        <reactive-streams.version>1.0.2</reactive-streams.version>
        <hibernate.entitymanager.version>5.2.9.Final</hibernate.entitymanager.version>
        <!--<jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
        <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>-->
        <converalls.repo.token>Aq0A50mRusMNemvnkmtWtUgUpxsgvMWGC</converalls.repo.token>
        <changelog.template.file>${project.basedir}/config/changelog.mustache</changelog.template.file>
        <maven.compiler.fork>true</maven.compiler.fork>
        <maven.enforcer.required.maven.version>3.3.9</maven.enforcer.required.maven.version>

        <!--Plugin versions-->
        <git-changelog-maven-plugin.version>1.54</git-changelog-maven-plugin.version>
        <spotbugs-maven-plugin.version>3.1.6</spotbugs-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
        <maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-javadoc-plugin.version>3.0.0</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <maven-pmd-plugin.version>3.9.0</maven-pmd-plugin.version>
        <maven-surefire-report-plugin.version>2.22.0</maven-surefire-report-plugin.version>
        <copy-maven-plugin.version>0.2.5</copy-maven-plugin.version>
        <codehaus.license.maven.plugin.version>1.16</codehaus.license.maven.plugin.version>
        <!--<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-dependency-plugin.version>3.0.2</maven-dependency-plugin.version>-->

        <!--Mycila License plugin-->
        <mycila.license.maven.plugin.version>3.0</mycila.license.maven.plugin.version>
        <license.header.location>com/mycila/maven/plugin/license/templates/GPL-3.txt</license.header.location>
        <license.header.definition>${project.basedir}/config/header_definition.xml</license.header.definition>
        <license.maven.owner>Edwin Njeru</license.maven.owner>
        <license.maven.email>mailnjeru@gmail.com</license.maven.email>

        <!-- Properties for maven-checkstyle-plugin -->
        <checkstyle.config.location>${project.basedir}/config/checkstyle.xml</checkstyle.config.location>
        <checkstyle.config.headerLocation>${project.basedir}/config/license_header.txt</checkstyle.config.headerLocation>
        <checkstyle.config.maxAllowedViolations>40</checkstyle.config.maxAllowedViolations>
        <checkstyle.config.consoleOutput>true</checkstyle.config.consoleOutput>
        <checkstyle.config.failsOnError>true</checkstyle.config.failsOnError>
        <checkstyle.config.includeResources>false</checkstyle.config.includeResources>
        <checkstyle.config.includeTestResources>false</checkstyle.config.includeTestResources>
        <checkstyle.config.includeTestResources>false</checkstyle.config.includeTestResources>
        <checkstyle.config.includeTestSourceDirectory>false</checkstyle.config.includeTestSourceDirectory>
        <linkXRef>false</linkXRef>

        <!--Javadocs Config-->
        <additionalparam>-Xdoclint:none</additionalparam>
        <additionalOptions>-Xdoclint:none</additionalOptions>
        <additionalparam>
            -inferrel -attributes -types -visibility -inferdep -quiet -hide java.* -collpackages java.util.* -qualify -postfixpackage
            -nodefontsize 9
            -nodefontpackagesize 7
        </additionalparam>

        <!--Config for deploy path-->
        <copy-maven-plugin.deploy.location>D:\Workspaces\fassets\lib</copy-maven-plugin.deploy.location>
    </properties>

    <profiles>
        <profile>
            <id>all-tests</id>
            <properties>
                <build.profile.id>all-tests</build.profile.id>
                <!-- All tests are run. -->
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <!-- Used to locate the profile specific configuration file. -->
                <build.profile.id>integration-test</build.profile.id>
                <!-- Only integration tests are run. -->
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>true</skip.unit.tests>
            </properties>
        </profile>

        <profile>
            <id>windows</id>
            <!--Somethings are meant to work better in windows-->
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
              <plugins>
                  <plugin>
                      <groupId>org.codehaus.mojo</groupId>
                      <artifactId>properties-maven-plugin</artifactId>
                      <version>1.0.0</version>
                      <executions>
                          <execution>
                              <id>initialize</id>
                              <phase>initialize</phase>
                              <goals>
                                  <goal>read-project-properties</goal>
                              </goals>
                              <configuration>
                                  <files>
                                      <file>config/dev.properties</file>
                                  </files>
                              </configuration>
                          </execution>
                          <execution>
                              <id>write-properties</id>
                              <phase>generate-resources</phase>
                              <goals>
                                  <goal>write-project-properties</goal>
                              </goals>
                              <configuration>
                                  <outputFile>
                                      config/app.properties
                                  </outputFile>
                              </configuration>
                          </execution>
                          <!--&lt;!&ndash;Failed to execute this one&ndash;&gt;
                          <execution>
                              <id>write-active-properties</id>
                              <phase>generate-resources</phase>
                              <goals>
                                  <goal>write-active-profile-properties</goal>
                              </goals>
                              <configuration>
                                  <outputFile>
                                      config/active-app.properties
                                  </outputFile>
                              </configuration>
                          </execution>-->
                          <execution>
                              <id>set-system-properties</id>
                              <goals>
                                  <goal>set-system-properties</goal>
                              </goals>
                              <configuration>
                                  <properties>
                                      <property>
                                          <!--todo set properties here-->
                                          <name>javadoc.tool.path.windows</name>
                                          <value>'C:\\Virtual_Machines\\Java\\Oracle\\java10\\jdk\\bin\\javadoc.exe'</value>
                                      </property>
                                  </properties>
                              </configuration>
                          </execution>
                      </executions>
                  </plugin>
              </plugins>
            </build>
        </profile>

        <profile>
            <id>java9+</id>
            <!--Automatically activate the profile if running on java9+-->
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <!-- deny illegal access to detect new problems -->
                            <!--org.springframework.cglib.core.ReflectUtils, #java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
                            method in spring framework version 5.0.7.RELEASE still using internal API-->
                            <argLine>
                                --illegal-access=deny
                                --add-opens java.base/java.lang=ALL-UNNAMED
                            </argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq-test</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>-->
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.webjars/jquery -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.webjars/bootstrap -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.ozlerhakan</groupId>
            <artifactId>poiji</artifactId>
            <version>${poiji.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.interceptor/javax.interceptor-api -->
        <dependency>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
            <version>1.2.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine -->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-envers -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-envers</artifactId>
            </dependency>
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-core -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.activation/javax.activation -->
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
            <version>1.2.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305 -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <!-- Hibernate validations -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validation.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.collections/eclipse-collections -->
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
            <version>${eclipse.collections.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.javamoney/moneta -->
        <dependency>
            <groupId>org.javamoney</groupId>
            <artifactId>moneta</artifactId>
            <version>${moneta.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.transaction/javax.transaction-api -->
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>javax.transaction-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax/javaee-api -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>javax.json.bind</groupId>
            <artifactId>javax.json.bind-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1</version>
            <scope>compile</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jadira.usertype/usertype.core -->
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${jadira.userType.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.10</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.joda/joda-money -->
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-money</artifactId>
            <version>0.12</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
        <!--<dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.3.0-M1</version>
            <scope>test</scope>
        </dependency>-->
        <dependency>
            <groupId>com.github.ghacupha</groupId>
            <artifactId>cash</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.ghacupha</groupId>
            <artifactId>time-point</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxjava -->
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>
        <!--<dependency>
            &lt;!&ndash;//todo find a way to integrate this with junit instead of testNG&ndash;&gt;
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams-tck</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>-->
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams-flow-adapters</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>
        <!--<dependency>
            &lt;!&ndash;//todo find a way to integrate this with junit instead of testNG&ndash&ndash;&gt;
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams-tck-flow</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>-->
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams-examples</artifactId>
            <version>${reactive-streams.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mali.fasaha</groupId>
            <artifactId>arka</artifactId>
            <version>1.0.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--Springboot plugin for the actual jar build-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <addResources>true</addResources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <encoding.source>UTF-8</encoding.source>
                                <encoding.reporting>UTF-8</encoding.reporting>
                                <java.source>${maven.compiler.source}</java.source>
                                <java.target>${maven.compiler.target}</java.target>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--Setup maven compiler plugin, inorder to control java version-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <fork>${maven.compiler.fork}</fork>
                </configuration>
            </plugin>

            <!--Setup dependency versions updates check, run with versions:display-dependency-updates-->
            <!--see: https://www.mojohaus.org/versions-maven-plugin/-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <!--Setup build helper plugin-->
            <!--<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    &lt;!&ndash;
                        States that the plugin's add-test-source goal is executed at
                        generate-test-sources phase.
                    &ndash;&gt;
                    <execution>
                        <nomenclature>add-integration-test-sources</nomenclature>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            &lt;!&ndash; Configures the source directory of integration tests. &ndash;&gt;
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->

            <!--Setup resources plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!--Setup failSafe plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>

                            <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
                            <skipTests>${it.skip}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Setup surefire plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Setup cobertura plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <outputDirectory>${basedir}/target</outputDirectory>
                    <format>xml</format>
                    <maxmem>256m</maxmem>
                    <!-- aggregated reports for multi-module projects -->
                    <aggregate>true</aggregate>
                    <check/>
                </configuration>
            </plugin>

            <!-- Setup coveralls plugin-->
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.3.0</version>
                <dependencies>
                    <!-- https://mvnrepository.com/artifact/org.eluder.coveralls/coveralls-maven-plugin -->
                    <dependency>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <version>4.3.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <coberturaReports>
                        <coberturaReport>
                            ${basedir}/target/coverage.xml
                        </coberturaReport>
                    </coberturaReports>
                    <sourceEncoding>UTF-8</sourceEncoding>
                    <serviceName>travis-ci</serviceName>
                    <serviceJobId>${env.TRAVIS_JOB_ID} </serviceJobId>
                    <repoToken>${converalls.repo.token}</repoToken>
                </configuration>
            </plugin>
            <!-- Print the change log as release notes...-->
            <!--Run mvn generate-sources, to use-->
            <plugin>
                <groupId>se.bjurr.gitchangelog</groupId>
                <artifactId>git-changelog-maven-plugin</artifactId>
                <version>${git-changelog-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>GenerateGitChangelog</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>git-changelog</goal>
                        </goals>
                        <configuration>
                            <!-- A file on filesystem //-->
                            <file>CHANGELOG.md</file>
                            <templateFile>${changelog.template.file}</templateFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Enforce Maven 3.5.0 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.enforcer.required.maven.version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Setup Checkstyle, excluding module-info -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <!--Could run with mvn clean verify-->
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <encoding>UTF-8</encoding>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>run-checkstyle</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>module-info.java</excludes>
                    <headerLocation>${checkstyle.config.headerLocation}</headerLocation>
                    <maxAllowedViolations>${checkstyle.config.maxAllowedViolations}</maxAllowedViolations>
                    <configLocation>${checkstyle.config.location}</configLocation>
                    <consoleOutput>${checkstyle.config.consoleOutput}</consoleOutput>
                    <failsOnError>${checkstyle.config.failsOnError}</failsOnError>
                    <includeResources>${checkstyle.config.includeResources}</includeResources>
                    <includeTestResources>${checkstyle.config.includeTestResources}</includeTestResources>
                    <includeTestSourceDirectory>${checkstyle.config.includeTestSourceDirectory}</includeTestSourceDirectory>
                    <linkXRef>${linkXRef}</linkXRef>
                </configuration>
            </plugin>
            <!-- Setup Javadoc jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <footer>Generated ${maven.build.timestamp}</footer>
                    <defaultVersion>0.0.1</defaultVersion>
                    <defaultAuthor>edwin.njeru</defaultAuthor>
                    <removeUnknownThrows>true</removeUnknownThrows>
                    <ignoreClirr>false</ignoreClirr>
                    <version>true</version>
                    <nosince>false</nosince>
                    <show>private</show>
                    <!-- Apple's JVM sometimes requires more memory -->
                    <additionalJOption>-J-Xmx1024m</additionalJOption>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--For compatibility comparisons-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>2.8</version>
            </plugin>

            <!-- Setup source jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Setup spotbugs dependency, would normally only be in reporting section -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>spotbugs</id>
                        <goals><goal>spotbugs</goal></goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>3.1.6</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Setup JaCoCo code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Setup site with reflow maven skin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <skipDeploy>true</skipDeploy>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>lt.velykis.maven.skins</groupId>
                        <artifactId>reflow-velocity-tools</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.velocity</groupId>
                        <artifactId>velocity</artifactId>
                        <version>1.7</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Setup to deploy site to GitHub, invoked with mvn site-deploy -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <executions>
                    <execution>
                        <id>github-site</id>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>site-deploy</phase>
                    </execution>
                </executions>
                <configuration>
                    <message>Create website for ${project.artifactId} v${project.version}</message>
                    <path>${project.artifactId}</path>
                    <merge>true</merge>
                    <server>github</server>
                    <repositoryOwner>Edwin Njeru</repositoryOwner>
                    <repositoryName>io.github.fasset</repositoryName>
                    <branch>refs/heads/master</branch>
                </configuration>
            </plugin>

            <!--Setup copy-maven-plugin-->
            <plugin>
                <groupId>com.github.goldin</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>0.2.5</version>
                <executions>
                    <execution>
                        <id>deploy-to-local-directory</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <skipIdentical>false</skipIdentical>
                            <failIfNotFound>false</failIfNotFound>
                            <resources>
                                <resource>
                                    <description>Copy artifact to another directory</description>
                                    <targetPath>${copy-maven-plugin.deploy.location}</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Setup scaffolding mycila license maven plugin-->
            <!--Use with mvn "mvn license:check", "mvn license:format" & "mvn license:remove"-->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${mycila.license.maven.plugin.version}</version>
                <configuration>
                    <header>${license.header.location}</header>
                    <headerDefinitions>${license.header.definition}</headerDefinitions>
                    <properties>
                        <owner>${license.maven.owner}</owner>
                        <email>${license.maven.email}</email>
                    </properties>
                    <excludes>
                        <exclude>**/README</exclude>
                        <exclude>**/CHANGELOG.md</exclude>
                        <exclude>**/LICENSE</exclude>
                        <exclude>**/logs/**</exclude>
                        <exclude>**/config/**</exclude>
                        <exclude>**/.idea/**</exclude>
                        <exclude>**/.mvn/**</exclude>
                        <exclude>**/.okhttpcache/**</exclude>
                        <exclude>**/target/**</exclude>
                        <exclude>**/client/**</exclude>
                        <exclude>**/temp-uploads/**</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/main/resources/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Setup codehaus mojo license management plugin-->
            <!-- Invocation by 'mvn package'-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${codehaus.license.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>download-licenses</id>
                        <goals>
                            <goal>download-licenses</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- Setup standard project info reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>dependency-info</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                            <report>project-team</report>
                            <report>scm</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- Setup Checkstyle report, excluding module-info -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <excludes>module-info.java</excludes>
                    <headerLocation>${checkstyle.config.headerLocation}</headerLocation>
                    <maxAllowedViolations>${checkstyle.config.maxAllowedViolations}</maxAllowedViolations>
                    <configLocation>${checkstyle.config.location}</configLocation>
                    <consoleOutput>${checkstyle.config.consoleOutput}</consoleOutput>
                    <failsOnError>${checkstyle.config.failsOnError}</failsOnError>
                    <includeResources>${checkstyle.config.includeResources}</includeResources>
                    <includeTestResources>${checkstyle.config.includeTestResources}</includeTestResources>
                    <includeTestSourceDirectory>${checkstyle.config.includeTestSourceDirectory}</includeTestSourceDirectory>
                    <linkXRef>${linkXRef}</linkXRef>
                </configuration>
            </plugin>
            <!-- Setup Javadoc report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <defaultVersion>0.0.1</defaultVersion>
                    <defaultAuthor>edwin.njeru</defaultAuthor>
                    <removeUnknownThrows>true</removeUnknownThrows>
                    <version>true</version>
                    <nosince>false</nosince>
                    <additionalOptions>-Xdoclint:none</additionalOptions>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>2.8</version>
            </plugin>
            <!-- Setup Surefire report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <showSuccess>true</showSuccess>
                </configuration>
            </plugin>
            <!-- Setup PMD report, excluding module-info -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${maven.compiler.target}</targetJdk>
                    <excludes>
                        <exclude>module-info.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Setup spotbugs report -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
            </plugin>
            <!-- Setup JaCoCo report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus Mojo</id>
            <name>Codehaus Mojo</name>
            <url>https://nexus.codehaus.org/content/repositories/releases/</url>
        </pluginRepository>
    </pluginRepositories>

    <url>https://github.com/mali-fasaha/fassets</url>
    <licenses>
        <license>
            <name>GPL version 3</name>
            <url>https://opensource.org/licenses/GPL-3.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:mali-fasaha/fassets.git</connection>
        <url>git@github.com:mali-fasaha/fassets.git</url>
        <developerConnection>scm:git:git@github.com:mali-fasaha/fassets.git</developerConnection>
    </scm>
    <developers>
        <developer>
            <email>mailnjeru@gmail.com</email>
            <url>https://github.com/ghacupha</url>
            <organization>mali-fasaha</organization>
            <organizationUrl>https://github.com/mali-fasaha</organizationUrl>
            <name>Edwin Njeru</name>
        </developer>
    </developers>
    <organization>
        <name>mali-fasaha</name>
        <url>https://github.com/mali-fasaha</url>
    </organization>

</project>
